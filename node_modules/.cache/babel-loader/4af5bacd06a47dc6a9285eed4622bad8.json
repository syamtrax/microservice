{"ast":null,"code":"var _jsxFileName = \"/Users/satriasyamm/Documents/Extras/Code/microservice/client/src/Pages/Lists.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Lists() {\n  _s();\n\n  const [data, setData] = useState([{}]);\n  useEffect(() => {\n    fetch(\"/Lists\").then(res => res.json()).then(data => {\n      setData(data);\n    });\n  }, []);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: typeof data === 'undefined' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading ... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this) : data.map(_ref => {\n      let {\n        id,\n        title,\n        price,\n        rating,\n        location,\n        sold\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\" \", title, \" \"]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: price\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: rating\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: location\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: sold\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Lists, \"odp7ftN9IDg1xewk47EaAZiwHYc=\");\n\n_c = Lists;\nexport default Lists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"sources":["/Users/satriasyamm/Documents/Extras/Code/microservice/client/src/Pages/Lists.js"],"names":["React","useState","useEffect","Lists","data","setData","fetch","then","res","json","console","log","map","id","title","price","rating","location","sold"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;AAEA,SAASC,KAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVI,IAAAA,KAAK,CAAC,QAAD,CAAL,CAAgBC,IAAhB,CACIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADX,EAEEF,IAFF,CAGIH,IAAI,IAAI;AACJC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACH,KALL;AAOH,GARQ,EAQP,EARO,CAAT;AASAM,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,sBACI;AAAA,cACM,OAAOA,IAAP,KAAgB,WAAjB,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,GAGDA,IAAI,CAACQ,GAAL,CAAS;AAAA,UAAC;AAACC,QAAAA,EAAD;AAAKC,QAAAA,KAAL;AAAYC,QAAAA,KAAZ;AAAmBC,QAAAA,MAAnB;AAA2BC,QAAAA,QAA3B;AAAqCC,QAAAA;AAArC,OAAD;AAAA,0BACL;AAAA,gCACI;AAAA,0BAAeJ,KAAf;AAAA,WAASD,EAAT;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAaE;AAAb,WAAQF,EAAR;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAaG;AAAb,WAAQH,EAAR;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,oBAAaI;AAAb,WAAQJ,EAAR;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA,oBAAaK;AAAb,WAAQL,EAAR;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA,sBADK;AAAA,KAAT;AAJJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GA9BQV,K;;KAAAA,K;AAgCT,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nfunction Lists(){\n    const [data, setData] = useState([{}])\n\n    useEffect(()=>{\n        fetch(\"/Lists\").then(\n            res => res.json()\n        ).then(\n            data => {\n                setData(data)\n            }\n        )\n    },[])\n    console.log(data)\n    return(\n        <div>\n            {(typeof data === 'undefined')? (\n                <p>Loading ... </p>\n            ): (\n            data.map(({id, title, price, rating, location, sold}) =>(\n                <>\n                    <h2 key={id}> {title} </h2>\n                    <p key={id}>{price}</p>\n                    <p key={id}>{rating}</p>\n                    <p key={id}>{location}</p>\n                    <p key={id}>{sold}</p>\n                </>\n            ))\n            )}\n      </div>\n  )\n}\n\nexport default Lists\n"]},"metadata":{},"sourceType":"module"}